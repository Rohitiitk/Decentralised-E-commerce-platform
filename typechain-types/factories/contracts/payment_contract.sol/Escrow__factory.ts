/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Escrow,
  EscrowInterface,
} from "../../../contracts/payment_contract.sol/Escrow";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "AgreementCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
    ],
    name: "AutoReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "FundsReleased",
    type: "event",
  },
  {
    inputs: [],
    name: "agreementCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "agreements",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isCompleted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
    ],
    name: "autoRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "createAgreement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
    ],
    name: "releaseFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506112538061001f6000396000f3fe60806040526004361061004a5760003560e01c8063459b860e1461004f5780634d68282f14610078578063bb7bb278146100a1578063bd14de96146100cc578063bf466cf71461010e575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610bc9565b61013e565b005b34801561008457600080fd5b5061009f600480360381019061009a9190610bc9565b6103f0565b005b3480156100ad57600080fd5b506100b6610726565b6040516100c39190610c05565b60405180910390f35b3480156100d857600080fd5b506100f360048036038101906100ee9190610bc9565b61072c565b60405161010596959493929190610c7c565b60405180910390f35b61012860048036038101906101239190610d09565b6107d5565b6040516101359190610c05565b60405180910390f35b8060008082815260200190815260200160002060050160009054906101000a900460ff16156101a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019990610dcd565b60405180910390fd5b6000806000848152602001908152602001600020905080600401544210156101ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f690610e39565b60405180910390fd5b60018160050160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102e8578060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600201549081150290604051600060405180830381858888f193505050501580156102e2573d6000803e3d6000fd5b506103b4565b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600201546040518363ffffffff1660e01b815260040161036f929190610e59565b6020604051808303816000875af115801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b29190610eae565b505b7f93fb721c2c02adcc629c450452332bd9fa1dfbc41825cf28709bf21e8d19363f836040516103e39190610c05565b60405180910390a1505050565b8060008082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90610f4d565b60405180910390fd5b8160008082815260200190815260200160002060050160009054906101000a900460ff16156104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef90610dcd565b60405180910390fd5b6000806000858152602001908152602001600020905060018160050160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105f7578060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600201549081150290604051600060405180830381858888f193505050501580156105f1573d6000803e3d6000fd5b506106c3565b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600201546040518363ffffffff1660e01b815260040161067e929190610e59565b6020604051808303816000875af115801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c19190610eae565b505b7f8f5073d0a7a22ba450e278541077e181af457be74bea91e61f1f99e6bb40748e848260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610718929190610f6d565b60405180910390a150505050565b60015481565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900460ff16905086565b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90610fe2565b60405180910390fd5b60008411610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f9061104e565b60405180910390fd5b60006001600081548092919061089d9061109d565b919050559050600083426108b191906110e5565b90506040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016000151581525060008084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550905050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610abe57853414610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab090611165565b60405180910390fd5b610b40565b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401610afb93929190611185565b6020604051808303816000875af1158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e9190610eae565b505b7f2aee9fc468e21fc7a8d1a4b4feea66f09e9090be2efa2481218c7b4c54761b6d823389898986604051610b79969594939291906111bc565b60405180910390a18192505050949350505050565b600080fd5b6000819050919050565b610ba681610b93565b8114610bb157600080fd5b50565b600081359050610bc381610b9d565b92915050565b600060208284031215610bdf57610bde610b8e565b5b6000610bed84828501610bb4565b91505092915050565b610bff81610b93565b82525050565b6000602082019050610c1a6000830184610bf6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c4b82610c20565b9050919050565b610c5b81610c40565b82525050565b60008115159050919050565b610c7681610c61565b82525050565b600060c082019050610c916000830189610c52565b610c9e6020830188610c52565b610cab6040830187610bf6565b610cb86060830186610c52565b610cc56080830185610bf6565b610cd260a0830184610c6d565b979650505050505050565b610ce681610c40565b8114610cf157600080fd5b50565b600081359050610d0381610cdd565b92915050565b60008060008060808587031215610d2357610d22610b8e565b5b6000610d3187828801610cf4565b9450506020610d4287828801610bb4565b9350506040610d5387828801610cf4565b9250506060610d6487828801610bb4565b91505092959194509250565b600082825260208201905092915050565b7f41677265656d656e7420697320616c726561647920636f6d706c657465640000600082015250565b6000610db7601e83610d70565b9150610dc282610d81565b602082019050919050565b60006020820190508181036000830152610de681610daa565b9050919050565b7f446561646c696e65206e6f742072656163686564000000000000000000000000600082015250565b6000610e23601483610d70565b9150610e2e82610ded565b602082019050919050565b60006020820190508181036000830152610e5281610e16565b9050919050565b6000604082019050610e6e6000830185610c52565b610e7b6020830184610bf6565b9392505050565b610e8b81610c61565b8114610e9657600080fd5b50565b600081519050610ea881610e82565b92915050565b600060208284031215610ec457610ec3610b8e565b5b6000610ed284828501610e99565b91505092915050565b7f4f6e6c792062757965722063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f37602283610d70565b9150610f4282610edb565b604082019050919050565b60006020820190508181036000830152610f6681610f2a565b9050919050565b6000604082019050610f826000830185610bf6565b610f8f6020830184610c52565b9392505050565b7f53656c6c657220616464726573732063616e6e6f74206265207a65726f000000600082015250565b6000610fcc601d83610d70565b9150610fd782610f96565b602082019050919050565b60006020820190508181036000830152610ffb81610fbf565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b6000611038602083610d70565b915061104382611002565b602082019050919050565b600060208201905081810360008301526110678161102b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110a882610b93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110da576110d961106e565b5b600182019050919050565b60006110f082610b93565b91506110fb83610b93565b92508282019050808211156111135761111261106e565b5b92915050565b7f496e636f72726563742045544820616d6f756e742073656e7400000000000000600082015250565b600061114f601983610d70565b915061115a82611119565b602082019050919050565b6000602082019050818103600083015261117e81611142565b9050919050565b600060608201905061119a6000830186610c52565b6111a76020830185610c52565b6111b46040830184610bf6565b949350505050565b600060c0820190506111d16000830189610bf6565b6111de6020830188610c52565b6111eb6040830187610c52565b6111f86060830186610bf6565b6112056080830185610c52565b61121260a0830184610bf6565b97965050505050505056fea2646970667358221220beea2933c482d98437550af6d642e13022427cf909e321626cdfe19d110833d064736f6c634300081c0033";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Escrow> {
    return super.deploy(overrides || {}) as Promise<Escrow>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Escrow {
    return super.attach(address) as Escrow;
  }
  override connect(signer: Signer): Escrow__factory {
    return super.connect(signer) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new utils.Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Escrow {
    return new Contract(address, _abi, signerOrProvider) as Escrow;
  }
}
